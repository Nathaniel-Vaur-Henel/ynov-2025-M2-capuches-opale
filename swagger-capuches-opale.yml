openapi: 3.0.3
info:
  title: Swagger Capuches d'Opale
  description: |-
    API de gestion des donn√©es pour Capuches d'Opale
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://capuches-opale
tags:
  - name: Adventurer
    description: Adventurer handling
  - name: Request
    description: Request handling
paths:
  /adventurer:
    get:
      tags:
        - Adventurer
      summary: Retrieve all adventurers of DB
      operationId: getAdventurers
      responses:
        '200':
          description: Adventurers successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdventurerDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Adventurer
      summary: Create a new adventurer
      operationId: createAdventurer
      requestBody:
        $ref: '#/components/requestBodies/AdventurerCreation'
      responses:
        '201':
          description: Adventurer successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdventurerDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /adventurer/{id}:
    get:
      tags:
        - Adventurer
      summary: Retrieve a specific adventurer by ID
      operationId: getAdventurerById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the adventurer to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Adventurer successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdventurerDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Adventurer not found
        '500':
          $ref: '#/components/responses/InternalServerError'
  /request:
    get:
      tags:
        - Request
      summary: Retrieve all request from DB
      operationId: getRequests
      responses:
        '200':
          description: Request successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RequestDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Request
      summary: Create a new request
      operationId: createRequest
      requestBody:
        $ref: '#/components/requestBodies/RequestCreation'
      responses:
        '201':
          description: Request successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDTO'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    BadRequest:
      description: The request is malformed or missing required fields
    InternalServerError:
      description: An internal server error occurred
  schemas:
    AdventurerDTO:
      description: Representation of an adventurer
      properties:
        id:
          type: integer
          format: int64
        name:
          description: Name of the adventurer
          type: string
        archetype:
          description: Archetype of the adventurer (pre-defined list)
          type: string
          enum: [WARRIOR, PALADIN, HUNTER, ROGUE, PRIEST, DEATH_KNIGHT, SHAMAN, MAGE, WARLOCK, MONK, DRUID, DEMON_HUNTER, EVOKER]
        experience:
          description: Professional experience of the adventurer
          type: integer
          format: int32
        dailyRate:
          type: number
          format: double
    RequestDTO:
      description: Representation of a request
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        bounty:
          type: number
          format: float
        status:
          type: string
          enum: [PENDING, REFUSED, ABANDONED, VALIDATED, FAILURE, SUCCESS]
        dueDate:
          type: string
          format: date
        backer:
          type: string
      required:
        - dueDate
        - backer
        - title
  requestBodies:
    AdventurerCreation:
      description: The new adventurer to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdventurerDTO'
    RequestCreation:
      description: The new request to create
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestDTO'